syntax = "proto3";

package space_traffic_control;

import "google/protobuf/wrappers.proto";
import "google/protobuf/empty.proto";

option go_package = "abouroumine.com/stc/api;api";

service AuthenticationInfo {
  rpc login(UserAuth) returns (JWTResponse) {}
  rpc signUp(UserAuth) returns (google.protobuf.BoolValue) {}
}

message UserAuth {
  string username = 1;
  string password = 2;
  string role = 3;
  string userid = 4;
}

message JWTResponse {
  string token = 1;
  string exp = 2;
}


service CCService {
  rpc stationRegister(Station) returns(Station) {}
  rpc allStations(AllStationMsg) returns(Stations) {}
  rpc shipRegister(google.protobuf.FloatValue) returns(google.protobuf.Empty) {}
  rpc allShips(google.protobuf.Empty) returns(Ships) {}
}

message AllStationMsg {
  string role = 1;
  string idShip = 2;
}

message Station {
  string id = 1;
  float capacity = 2;
  float usedCapacity = 3;
  repeated Dock docks = 4;
  bool isRegistered = 5;
}

message Stations {
  repeated Station stations = 1;
}

message Ship {
  string id = 1;
  string status = 2;
  float weight = 3;
  int32 time = 4;
}

message Ships {
  repeated Ship ships = 1;
}

message Dock {
  string id = 1;
  int32 numDockingPorts = 2;
  int32 occupied = 3;
  float weight = 4;
}

service ShippingStation {
  rpc requestLand(RequestDemand) returns (Command) {}
  rpc landing(RequestDemand) returns (google.protobuf.Empty) {}
}

message Command {
  string command = 1;
  int32 duration = 2;
  string dockingStation = 3;
}

message RequestDemand {
  int32 time = 1;
  string idShip = 2;
  string idStation = 3;
}