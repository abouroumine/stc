syntax = "proto3";

package space_traffic_control;

import "google/protobuf/wrappers.proto";
import "google/protobuf/empty.proto";

option go_package = "abouroumine.com/stc/db_service;db_service";

service AuthenticationInfo {
  rpc checkInfoDB(UserAuth) returns (UserAuth) {}
  rpc signUp(UserAuth) returns (google.protobuf.BoolValue) {}
}

message UserAuth {
  string username = 1;
  string password = 2;
  string role = 3;
  string userid = 4;
}

service CCService {
  rpc stationRegister(Station) returns(Station) {}
  rpc shipCCInfo(google.protobuf.Int32Value) returns(Ship) {}
  rpc allStationsNoCondition(google.protobuf.Empty) returns(Stations) {}
  rpc allStationsWithCondition(google.protobuf.FloatValue) returns(Stations) {}
  rpc shipRegister(google.protobuf.FloatValue) returns(google.protobuf.Empty) {}
  rpc allShips(google.protobuf.Empty) returns(Ships) {}
}

message Station {
  string id = 1;
  float capacity = 2;
  float usedCapacity = 3;
  repeated Dock docks = 4;
  bool isRegistered = 5;
}

message Stations {
  repeated Station stations = 1;
}

message Ship {
  string id = 1;
  string status = 2;
  float weight = 3;
  int32 time = 4;
  int32 startTime = 5;
}

message Ships {
  repeated Ship ships = 1;
}

message Dock {
  string id = 1;
  int32 numDockingPorts = 2;
  int32 occupied = 3;
  float weight = 4;
}

service ShippingStation {
  rpc stationInfo(google.protobuf.Int32Value) returns(Station) {}
  rpc shipInfo(google.protobuf.Int32Value) returns(Ship) {}
  rpc updateTheLandData(UpdateLandData) returns (google.protobuf.Empty) {}
}

message Command {
  string command = 1;
  int32 duration = 2;
  string dockingStation = 3;
}

message UpdateLandData {
  string idShip = 1;
  string idDock = 2;
  string idStation = 3;
  float weight = 4;
  bool addition = 5;
  int32 time = 6;
}